<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(sd:DataRow)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1279,3332</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="26">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="1106,3167" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="currentStatus" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="dbConnection" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:DatabaseConnect DatabaseConnection="[dbConnection]" DisplayName="Connect" sap:VirtualizedContainerService.HintSize="1064,59" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="System.Data.SqlClient" ConnectionString="[in_Config(&quot;dbConnection&quot;).ToString]" />
    <ui:Comment DisplayName="Comment (placeholder)" sap:VirtualizedContainerService.HintSize="1064,55" sap2010:WorkflowViewState.IdRef="Comment_1" Text="//  Invoke steps of the process" />
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1064,64" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;Name: &quot; + in_TransactionItem(&quot;name&quot;).ToString + Environment.NewLine +&#xA;&quot;Email: &quot; + in_TransactionItem(&quot;email&quot;).ToString + Environment.NewLine +&#xA;&quot;Status: &quot; + in_TransactionItem(&quot;employeeStatus&quot;).ToString + Environment.NewLine]" />
    <If Condition="[NOT String.IsNullOrEmpty(in_TransactionItem(&quot;employeeStatus&quot;).ToString)]" DisplayName="If valid status" sap:VirtualizedContainerService.HintSize="1064,239" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Assign DisplayName="Assign currentStatus" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[currentStatus]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_TransactionItem("employeeStatus").ToString]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn" Message="[&quot;The status is NULL&quot;]" />
      </If.Else>
    </If>
    <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[currentStatus]" sap:VirtualizedContainerService.HintSize="1064,2364" sap2010:WorkflowViewState.IdRef="Switch`1_2">
      <Sequence x:Key="1" DisplayName="Status Questionnaire sent" sap:VirtualizedContainerService.HintSize="421,280" sap2010:WorkflowViewState.IdRef="Sequence_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <WriteLine sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="Status 1:  Questionnaire test sent" />
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Status 1. Questionnaire tests sent workflow" sap:VirtualizedContainerService.HintSize="379,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Workflows\Status\Status 1. Questionnaire tests sent.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
            <InArgument x:TypeArguments="sd:DataRow" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
            <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_Connection">[dbConnection]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </Sequence>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" x:Key="2" DisplayName="Invoke Status 1.1 Questionnaire failed to send workflow" sap:VirtualizedContainerService.HintSize="379,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Workflows/Status/Status 1.1 Questionnaire failed to send.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="dbConnection">[dbConnection]</InArgument>
          <InArgument x:TypeArguments="sd:DataRow" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <Sequence x:Key="3" sap:VirtualizedContainerService.HintSize="1024,2092" sap2010:WorkflowViewState.IdRef="Sequence_7">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="query" />
          <Variable x:TypeArguments="sd:DataTable" Name="dtPosition" />
          <Variable x:TypeArguments="x:String" Name="positionId" />
          <Variable x:TypeArguments="x:Boolean" Name="bioCompleted" />
          <Variable x:TypeArguments="x:String" Name="bioRole" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:Comment sap:VirtualizedContainerService.HintSize="982,55" sap2010:WorkflowViewState.IdRef="Comment_2" Text="// TODO" />
        <Assign sap:VirtualizedContainerService.HintSize="982,60" sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[query]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">["select top 1 position_ID from hackerank where partneremployee_id = " + in_TransactionItem("id").ToString + " order by created desc"]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtPosition]" DisplayName="Execute Query" ExistingDbConnection="[dbConnection]" sap:VirtualizedContainerService.HintSize="982,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="[query]">
          <ui:ExecuteQuery.Parameters>
            <scg:Dictionary x:TypeArguments="x:String, Argument" />
          </ui:ExecuteQuery.Parameters>
        </ui:ExecuteQuery>
        <Assign sap:VirtualizedContainerService.HintSize="982,60" sap2010:WorkflowViewState.IdRef="Assign_4">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[positionId]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[dtPosition.Rows(0).Item(0).ToString]</InArgument>
          </Assign.Value>
        </Assign>
        <Switch x:TypeArguments="x:Int32" DisplayName="Switch" Expression="[Integer.Parse(positionId)]" sap:VirtualizedContainerService.HintSize="982,204" sap2010:WorkflowViewState.IdRef="Switch`1_4">
          <Assign x:Key="4" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[bioRole]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">devinfo</InArgument>
            </Assign.Value>
          </Assign>
          <Assign x:Key="5" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[bioRole]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">sainfo</InArgument>
            </Assign.Value>
          </Assign>
          <Assign x:Key="6" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_11">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[bioRole]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["bainfo"]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign x:Key="7" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_12">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[bioRole]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">infrainfo</InArgument>
            </Assign.Value>
          </Assign>
        </Switch>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetBioDB workflow" sap:VirtualizedContainerService.HintSize="982,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Workflows\GetBioDB.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_Connection">
              <mva:VisualBasicValue x:TypeArguments="ui:DatabaseConnection" ExpressionText="dbConnection" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_PartnerEmployeeId">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;id&quot;).ToString" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_roleTable">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="bioRole" />
            </InArgument>
            <OutArgument x:TypeArguments="x:Boolean" x:Key="out_BioCompleted">
              <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="bioCompleted" />
            </OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <If Condition="[bioCompleted]" sap:VirtualizedContainerService.HintSize="982,1105" sap2010:WorkflowViewState.IdRef="If_2">
          <If.Then>
            <Switch x:TypeArguments="x:Int32" DisplayName="Switch" Expression="[Integer.Parse(positionId)]" sap:VirtualizedContainerService.HintSize="837,957" sap2010:WorkflowViewState.IdRef="Switch`1_5">
              <Sequence x:Key="4" sap:VirtualizedContainerService.HintSize="797,773" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="devRpaTools" />
                  <Variable x:TypeArguments="x:String" Name="devRpaExperience" />
                  <Variable x:TypeArguments="x:String" Name="devUipathExperience" />
                  <Variable x:TypeArguments="x:String" Name="devProgrammingLanguage" />
                  <Variable x:TypeArguments="x:String" Name="devGeoId" />
                  <Variable x:TypeArguments="x:String" Name="devExperience" />
                  <Variable x:TypeArguments="x:String" Name="devVersionControl" />
                  <Variable x:TypeArguments="x:String" Name="devOperatingSystems" />
                  <Variable x:TypeArguments="x:String" Name="devIdeUsed" />
                  <Variable x:TypeArguments="x:String" Name="devProjectsDeveloped" />
                  <Variable x:TypeArguments="x:String" Name="devComments" />
                  <Variable x:TypeArguments="x:String" Name="partnerDevId" />
                  <Variable x:TypeArguments="x:Boolean" Name="DevJotBioCompleted" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke JotGetDevBio workflow" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Workflows\JOT\JotGetDevBio.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                      <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                    </InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_RpaTools">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="devRpaTools" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_RpaExperience">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="devRpaExperience" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_UipathExperience">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="devUipathExperience" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_ProgrammingLanguage">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="devProgrammingLanguage" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_GeoId">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="devGeoId" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_Experience">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="devExperience" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_VersionControl">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="devVersionControl" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_OperatingSystems">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="devOperatingSystems" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_IdeUsed">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="devIdeUsed" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_ProjectsDeveloped">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="devProjectsDeveloped" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_Comments">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="devComments" />
                    </OutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_PartnerEmployeeId">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="partnerDevId" />
                    </InArgument>
                    <OutArgument x:TypeArguments="x:Boolean" x:Key="out_JOTBioCompleted">
                      <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="DevJotBioCompleted" />
                    </OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <If Condition="[DevJotBioCompleted]" DisplayName="If jotCompleted" sap:VirtualizedContainerService.HintSize="755,427" sap2010:WorkflowViewState.IdRef="If_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="376,279" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InsertBioDB workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Workflows\InsertBioDevSaDB.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_Connection">
                            <mva:VisualBasicValue x:TypeArguments="ui:DatabaseConnection" ExpressionText="dbConnection" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_PartnerEmployeeId">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="partnerDevId" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_RoleTable">
                            <Literal x:TypeArguments="x:String">devinfo</Literal>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_GeoId">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="devGeoId" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Experience">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="devExperience" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_RpaExperience">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="devRpaExperience" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_UipathExperience">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="devUipathExperience" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ProjectsDeveloped">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="devProjectsDeveloped" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_RpaTools">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="devRpaTools" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ProgrammingLanguage">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="devProgrammingLanguage" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_VersionControl">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="devVersionControl" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_IdeUsed">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="devIdeUsed" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_OperatingSystems">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="devOperatingSystems" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Comments">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="devComments" />
                          </InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[bioCompleted]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Dev Bio Not Completed&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                  </If.Else>
                </If>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdaterobotTABLE workflow Set flag" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Workflows\Logs\InsertIntoRobotLogTable.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ID">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;id&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_RobotLog">
                      <Literal x:TypeArguments="x:String">#devBio#</Literal>
                    </InArgument>
                    <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_Connection">
                      <mva:VisualBasicValue x:TypeArguments="ui:DatabaseConnection" ExpressionText="dbConnection" />
                    </InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </Switch>
          </If.Then>
        </If>
        <WriteLine sap:VirtualizedContainerService.HintSize="982,61" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="Status 3:  Awaiting for bio" />
      </Sequence>
      <WriteLine x:Key="4" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="Status 4: Schedule Remote asessment" />
      <WriteLine x:Key="5" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="Status 5: Results Communicated - Failed" />
    </Switch>
    <ui:DatabaseDisconnect DatabaseConnection="[dbConnection]" DisplayName="Disconnect" sap:VirtualizedContainerService.HintSize="1064,22" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_1" />
  </Sequence>
</Activity>