<Activity mc:Ignorable="sap sap2010" x:Class="Status_1__Questionnaire_tests_sent" this:Status_1__Questionnaire_tests_sent.in_Config="[]" this:Status_1__Questionnaire_tests_sent.in_TransactionItem="[]" this:Status_1__Questionnaire_tests_sent.in_Connection="[]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_TransactionItem" Type="InArgument(sd:DataRow)" />
    <x:Property Name="in_Connection" Type="InArgument(ui:DatabaseConnection)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1217,4727</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Status_1__Questionnaire_tests_sent_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="52">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="The Robot will check if the test was completed and change the Status to 3. Awaiting for BIO&#xA;&#xA;" DisplayName="Status_1__Questionnaire_tests_sent" sap:VirtualizedContainerService.HintSize="1160,4562" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="hrScore" />
      <Variable x:TypeArguments="x:String" Name="hrTestId" />
      <Variable x:TypeArguments="x:String" Name="positionId" />
      <Variable x:TypeArguments="x:String" Name="hrStatus" />
      <Variable x:TypeArguments="x:String" Name="hrCreated" />
      <Variable x:TypeArguments="x:String" Name="dateDif" />
      <Variable x:TypeArguments="x:String" Name="endpointUrl" />
      <Variable x:TypeArguments="x:String" Name="score" />
      <Variable x:TypeArguments="x:String" Name="plagiarism" />
      <Variable x:TypeArguments="x:String" Name="status" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetEmployeeHackerrankDetails workflow" sap:VirtualizedContainerService.HintSize="1118,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Workflows\Hackerrank\GetEmployeeHackerrankDetails.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_DbConnectionString">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;dbConnection&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_EmployeeId">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;id&quot;).ToString" />
        </InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_PositionId">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="positionId" />
        </OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="TODO delete constant value from arguments" DisplayName="Invoke GetScoreAndHrId workflow" sap:VirtualizedContainerService.HintSize="1118,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Workflows\Hackerrank\GetScoreAndHrId.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_Connection">
          <mva:VisualBasicValue x:TypeArguments="ui:DatabaseConnection" ExpressionText="in_Connection" />
        </InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Score">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="hrScore" />
        </OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_HrID">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="hrTestId" />
        </OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_PositionId">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="positionId" />
        </InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Status">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="hrStatus" />
        </OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Created">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="hrCreated" />
        </OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_EmployeeId">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;id&quot;).ToString" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <Switch x:TypeArguments="x:String" DisplayName="Switch EndpointURL" Expression="[positionId]" sap:VirtualizedContainerService.HintSize="1118,52" sap2010:WorkflowViewState.IdRef="Switch`1_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign x:Key="4" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[endpointUrl]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["https://www.hackerrank.com//x/api/v3/tests/"+in_Config("DevTestID").toString+"/candidates/"+hrTestId]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign x:Key="5" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[endpointUrl]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["https://www.hackerrank.com//x/api/v3/tests/"+in_Config("SATestID").toString+"/candidates/"+hrTestId]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign x:Key="6" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[endpointUrl]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["https://www.hackerrank.com//x/api/v3/tests/"+in_Config("BATestID").toString+"/candidates/"+hrTestId]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign x:Key="7" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[endpointUrl]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["https://www.hackerrank.com//x/api/v3/tests/"+in_Config("InfraTestID").toString+"/candidates/"+hrTestId]</InArgument>
        </Assign.Value>
      </Assign>
    </Switch>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1118,62" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[&quot;EndpointUrl:&quot; + endpointUrl]" />
    <ui:Comment sap:VirtualizedContainerService.HintSize="1118,56" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// Delete below" />
    <Assign sap:VirtualizedContainerService.HintSize="1118,60" sap2010:WorkflowViewState.IdRef="Assign_30">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[hrStatus]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">not started</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[hrStatus &lt;&gt; &quot;failed&quot; and hrStatus &lt;&gt; &quot;passed&quot;]" sap:VirtualizedContainerService.HintSize="1118,3735" sap2010:WorkflowViewState.IdRef="If_6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="973,3585" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[hrTestId &lt;&gt; &quot;0&quot;]" sap:VirtualizedContainerService.HintSize="931,870" sap2010:WorkflowViewState.IdRef="If_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="376,720" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="theResult" />
                  <Variable x:TypeArguments="x:Int32" Name="statusCode" />
                  <Variable x:TypeArguments="njl:JObject" Name="theResultJson" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="Checking score" />
                <ui:HttpClient ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" Body="[Nothing]" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="Dev HTTP Request Hackerrank" EndPoint="[endpointUrl]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="GET" Result="[theResult]" StatusCode="[statusCode]" TimeoutMS="6000">
                  <ui:HttpClient.Attachments>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Attachments>
                  <ui:HttpClient.Cookies>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Cookies>
                  <ui:HttpClient.Headers>
                    <InArgument x:TypeArguments="x:String" x:Key="Authorization">[in_Config("token").ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                  </ui:HttpClient.Headers>
                  <ui:HttpClient.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Parameters>
                  <ui:HttpClient.UrlSegments>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.UrlSegments>
                </ui:HttpClient>
                <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Dev Deserialize JSON" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[theResultJson]" JsonString="[theResult]" />
                <Assign DisplayName="Assign devStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[status]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[theResultJson("status").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign devScore" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[score]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[theResultJson("percentage_score").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign devPlagiarism" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[plagiarism]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[theResultJson("plagiarism_status").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,64" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[&quot;Status: &quot; + status.ToString + Environment.NewLine +&#xA;&quot;Score: &quot; + score.ToString + Environment.NewLine +&#xA;&quot;Plagiarism: &quot; + plagiarism.ToString + Environment.NewLine]" />
              </Sequence>
            </If.Then>
          </If>
          <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[status]" sap:VirtualizedContainerService.HintSize="931,2583" sap2010:WorkflowViewState.IdRef="Switch`1_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence x:Key="-1" DisplayName="Not taken" sap:VirtualizedContainerService.HintSize="756,715" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Not started" sap:VirtualizedContainerService.HintSize="714,625" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="672,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dateDif]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[DateDiff(DateInterval.Day, DateTime.Parse(hrCreated), Datetime.Now).ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[Integer.Parse(dateDif) &gt;= 14 and hrStatus = &quot;not started&quot;]" sap:VirtualizedContainerService.HintSize="672,431" sap2010:WorkflowViewState.IdRef="If_4">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="397,281" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="355,62" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="Send reminder" />
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendHackerrankTest workflow" sap:VirtualizedContainerService.HintSize="355,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Workflows/Hackerrank/RemindHackerrankTest.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_EmployeeId">[in_TransactionItem("id").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="in_EmployeePosition">[Integer.Parse(positionId)]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_FullName">[in_TransactionItem("name").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Email">[in_TransactionItem("email").ToString]</InArgument>
                          <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_Connection">[in_Connection]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_PartnerId">[in_TransactionItem("partner_id").ToString]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,62" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="Do nothing" />
                  </If.Else>
                </If>
              </Sequence>
            </Sequence>
            <Sequence x:Key="7" DisplayName="Taken" sap:VirtualizedContainerService.HintSize="891,2373" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="minScore" />
                <Variable x:TypeArguments="x:String" Name="theBodyEm" />
                <Variable x:TypeArguments="x:String" Name="emailPoistion" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="849,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[minScore]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                </Assign.Value>
              </Assign>
              <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[positionId]" sap:VirtualizedContainerService.HintSize="849,508" sap2010:WorkflowViewState.IdRef="Switch`1_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence x:Key="4" DisplayName="DEV" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[minScore]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[in_Config("HrTestMinScoreDEV").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[emailPoistion]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">USN RPA Developer</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence x:Key="5" DisplayName="SA" sap:VirtualizedContainerService.HintSize="304,248" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[minScore]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[in_Config("HrTestMinScoreSA").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[emailPoistion]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">USN Solution Architect</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence x:Key="6" DisplayName="BA" sap:VirtualizedContainerService.HintSize="304,248" sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[minScore]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[in_Config("HrTestMinScoreBA").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[emailPoistion]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">USN Business Analyst</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence x:Key="7" DisplayName="INFRA" sap:VirtualizedContainerService.HintSize="304,248" sap2010:WorkflowViewState.IdRef="Sequence_17">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[minScore]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[in_Config("HrTestMinScoreINFRA").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[emailPoistion]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">USN Infrastucture Engineer</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </Switch>
              <ui:Comment sap:VirtualizedContainerService.HintSize="849,56" sap2010:WorkflowViewState.IdRef="Comment_3" Text="// Delete below" />
              <Assign sap:VirtualizedContainerService.HintSize="849,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[score]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">100</InArgument>
                </Assign.Value>
              </Assign>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="849,62" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="[&quot;Min Score: &quot; + minScore +&quot; actual score: &quot; +score + &quot; passed: &quot; + (convert.ToDouble(score) &gt; convert.ToDouble(minScore)).ToString]" />
              <If Condition="[convert.ToDouble(score) &gt; convert.ToDouble(minScore)]" sap:VirtualizedContainerService.HintSize="849,556" sap2010:WorkflowViewState.IdRef="If_5">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="402,406" sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Update Passed" sap:VirtualizedContainerService.HintSize="360,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Workflows\Hackerrank\UpdateHackerrankTable.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_Connection">
                          <mva:VisualBasicValue x:TypeArguments="ui:DatabaseConnection" ExpressionText="in_Connection" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_PartnerEmployeeID">
                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;id&quot;).ToString" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_hackerrankTestID">
                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="hrTestId" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_status">
                          <Literal x:TypeArguments="x:String">passed</Literal>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_positionID">
                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="positionId" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_score">
                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="score" />
                        </InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateEmployeeStatus workflow" sap:VirtualizedContainerService.HintSize="360,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Workflows\UpdateEmployeeStatus.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_Connection">
                          <mva:VisualBasicValue x:TypeArguments="ui:DatabaseConnection" ExpressionText="in_Connection" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Status">
                          <Literal x:TypeArguments="x:String">3</Literal>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_EmployeeId">
                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;id&quot;).ToString" />
                        </InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign sap:VirtualizedContainerService.HintSize="360,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[theBodyEm]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[in_config("EmailBodyHRResult").ToString.replace("#congrats#","Congratulations!")]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="402,279" sap2010:WorkflowViewState.IdRef="Sequence_12">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Update Faield" sap:VirtualizedContainerService.HintSize="360,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Workflows\Hackerrank\UpdateHackerrankTable.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_Connection">
                          <mva:VisualBasicValue x:TypeArguments="ui:DatabaseConnection" ExpressionText="in_Connection" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_PartnerEmployeeID">
                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;id&quot;).ToString" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_hackerrankTestID">
                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="hrTestId" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_status">
                          <Literal x:TypeArguments="x:String">failed</Literal>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_positionID">
                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="positionId" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_score">
                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="score" />
                        </InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign sap:VirtualizedContainerService.HintSize="360,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[theBodyEm]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[in_config("EmailBodyHRResult").ToString.replace("#congrats#","")]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Else>
              </If>
              <Sequence DisplayName="assign mail details" sap:VirtualizedContainerService.HintSize="849,739" sap2010:WorkflowViewState.IdRef="Sequence_13">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="toEmail" />
                  <Variable x:TypeArguments="x:String" Name="cc" />
                  <Variable x:TypeArguments="x:String" Name="account" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assign theBodyEm" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[theBodyEm]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[theBodyEm.replace("#name#",in_TransactionItem("name").ToString).replace("#score#",score.ToString).replace("#exam#",emailPoistion)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[toEmail]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[in_TransactionItem("email").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[cc]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">ionut.nicula@uipath.com</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[account]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">ionut.nicula@uipath.com</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[account]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Account="[account]" Body="[theBodyEm]" Cc="[cc]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,147" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" IsBodyHtml="True" IsDraft="False" Subject="[in_Config(&quot;EmailSubjectHrResults&quot;).ToString]" To="[toemail]">
                  <ui:SendOutlookMail.Files>
                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                  </ui:SendOutlookMail.Files>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:SendOutlookMail>
              </Sequence>
            </Sequence>
          </Switch>
        </Sequence>
      </If.Then>
    </If>
  </Sequence>
</Activity>