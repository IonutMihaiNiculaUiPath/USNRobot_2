<Activity mc:Ignorable="sap sap2010" x:Class="Status_1__Questionnaire_tests_sent" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_TransactionItem" Type="InArgument(sd:DataRow)" />
    <x:Property Name="in_Connection" Type="InArgument(ui:DatabaseConnection)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1044,2310</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Status_1__Questionnaire_tests_sent_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="27">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="The Robot will check if the test was completed and change the Status to 3. Awaiting for BIO&#xA;&#xA;" DisplayName="Status_1__Questionnaire_tests_sent" sap:VirtualizedContainerService.HintSize="629,2145" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="hrScore" />
      <Variable x:TypeArguments="x:String" Name="hrTestId" />
      <Variable x:TypeArguments="x:String" Name="positionId" />
      <Variable x:TypeArguments="x:String" Name="hrStatus" />
      <Variable x:TypeArguments="x:String" Name="hrCreated" />
      <Variable x:TypeArguments="x:String" Name="dateDif" />
      <Variable x:TypeArguments="x:String" Name="endpointUrl" />
      <Variable x:TypeArguments="x:String" Name="score" />
      <Variable x:TypeArguments="x:String" Name="plagiarism" />
      <Variable x:TypeArguments="x:String" Name="status" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetEmployeeHackerrankDetails workflow" sap:VirtualizedContainerService.HintSize="587,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Workflows\Hackerrank\GetEmployeeHackerrankDetails.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_DbConnectionString">[in_Config("dbConnection").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_EmployeeId">[in_TransactionItem("id").ToString]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_PositionId">[positionId]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetScoreAndHrId workflow" sap:VirtualizedContainerService.HintSize="587,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Workflows\Hackerrank\GetScoreAndHrId.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_Connection">
          <mva:VisualBasicValue x:TypeArguments="ui:DatabaseConnection" ExpressionText="in_Connection" />
        </InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Score">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="hrScore" />
        </OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_HrID">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="hrTestId" />
        </OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_PositionId">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="positionId" />
        </InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Status">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="hrStatus" />
        </OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Created">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="hrCreated" />
        </OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_EmployeeId">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;id&quot;).ToString" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Switch x:TypeArguments="x:String" DisplayName="Switch EndpointURL" Expression="[positionId]" sap:VirtualizedContainerService.HintSize="587,52" sap2010:WorkflowViewState.IdRef="Switch`1_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign x:Key="4" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[endpointUrl]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["https://www.hackerrank.com//x/api/v3/tests/"+in_Config("DevTestID").toString+"/candidates/"+hrTestId]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign x:Key="5" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[endpointUrl]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["https://www.hackerrank.com//x/api/v3/tests/"+in_Config("SATestID").toString+"/candidates/"+hrTestId]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign x:Key="6" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[endpointUrl]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["https://www.hackerrank.com//x/api/v3/tests/"+in_Config("BATestID").toString+"/candidates/"+hrTestId]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign x:Key="7" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[endpointUrl]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["https://www.hackerrank.com//x/api/v3/tests/"+in_Config("InfraTestID").toString+"/candidates/"+hrTestId]</InArgument>
        </Assign.Value>
      </Assign>
    </Switch>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="587,62" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[&quot;EndpointUrl:&quot; + endpointUrl]" />
    <If Condition="[hrTestId &lt;&gt; &quot;0&quot;]" sap:VirtualizedContainerService.HintSize="587,868" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,718" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="theResult" />
            <Variable x:TypeArguments="x:Int32" Name="statusCode" />
            <Variable x:TypeArguments="njl:JObject" Name="theResultJson" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="Checking score" />
          <ui:HttpClient ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="Dev HTTP Request Hackerrank" EndPoint="[endpointUrl]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="GET" Result="[theResult]" StatusCode="[statusCode]" TimeoutMS="6000">
            <ui:HttpClient.Attachments>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Attachments>
            <ui:HttpClient.Body>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:HttpClient.Body>
            <ui:HttpClient.Cookies>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Cookies>
            <ui:HttpClient.Headers>
              <InArgument x:TypeArguments="x:String" x:Key="Authorization">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;token&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="Content-Type">
                <Literal x:TypeArguments="x:String">application/json</Literal>
              </InArgument>
            </ui:HttpClient.Headers>
            <ui:HttpClient.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Parameters>
            <ui:HttpClient.UrlSegments>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.UrlSegments>
          </ui:HttpClient>
          <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Dev Deserialize JSON" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[theResultJson]" JsonString="[theResult]" />
          <Assign DisplayName="Assign devStatus" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[status]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[theResultJson("status").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign devScore" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[score]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[theResultJson("percentage_score").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign devPlagiarism" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[plagiarism]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[theResultJson("plagiarism_status").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[&quot;Status: &quot; + status.ToString + Environment.NewLine +&#xD;&#xA;&quot;Score: &quot; + score.ToString + Environment.NewLine +&#xD;&#xA;&quot;Plagiarism: &quot; + plagiarism.ToString + Environment.NewLine]" />
        </Sequence>
      </If.Then>
    </If>
    <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[status.ToLower]" sap:VirtualizedContainerService.HintSize="587,637" sap2010:WorkflowViewState.IdRef="Switch`1_4">
      <Sequence x:Key="not started" DisplayName="Not started" sap:VirtualizedContainerService.HintSize="547,404" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="505,60" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[dateDif]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[DateDiff(DateInterval.Day, DateTime.Parse(hrCreated), Datetime.Now).ToString]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[Integer.Parse(dateDif) &gt;= 14]" sap:VirtualizedContainerService.HintSize="505,212" sap2010:WorkflowViewState.IdRef="If_2">
          <If.Then>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,62" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="Send reminder" />
          </If.Then>
          <If.Else>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,62" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="Do nothing" />
          </If.Else>
        </If>
      </Sequence>
      <WriteLine x:Key="failed" sap:VirtualizedContainerService.HintSize="230,62" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="Update hackerrank db and set status to Test Failed" />
      <WriteLine x:Key="passed" sap:VirtualizedContainerService.HintSize="230,62" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="update hr table &amp; move to status awaiting for bio" />
    </Switch>
  </Sequence>
</Activity>