<Activity mc:Ignorable="sap sap2010" x:Class="Status10" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Connection" Type="InArgument(ui:DatabaseConnection)" />
    <x:Property Name="in_TransactionItem" Type="InArgument(sd:DataRow)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1455,6623</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Status10_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="23">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="29">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationX</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Status 3" sap:VirtualizedContainerService.HintSize="1465,6458" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Int32)" Default="[new Dictionary(Of String, Integer)]" Name="dictionarDetailed_Position" />
      <Variable x:TypeArguments="x:Double" Name="overallScore" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Int32)" Default="[new Dictionary(Of String, Integer)]" Name="dictionarDetailed_Threshold" />
      <Variable x:TypeArguments="x:String" Name="account">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">ionut.nicula@uipath.com</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="employeeID" />
      <Variable x:TypeArguments="x:String" Name="partnerId" />
      <Variable x:TypeArguments="x:String" Name="position" />
      <Variable x:TypeArguments="x:Boolean" Name="isTested" />
      <Variable x:TypeArguments="x:Boolean" Name="isTestedSuccesfully" />
      <Variable x:TypeArguments="sd:DataRow" Name="linie" />
      <Variable x:TypeArguments="x:String" Name="positionText" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:Comment sap:VirtualizedContainerService.HintSize="1423,169" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// pentru fieacare rol verific in tabela [detailedROLE] sa aiba scorul diferit de 0 si uipath reviewer email &lt;&gt;'' atunci inseamna ca a terminat si dau mail individual. La sfarsit, cand au terminat toti remote assesment, un mail agregat(daca au trecut 10-&gt;11 Daca nu au trecut 10-&gt;14)" />
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1423,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[employeeID]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem("PartnerEmployee_ID").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[partnerId]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem("partner_id").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[position]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem("Position_ID").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1423,93" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Status 3 a inceput pentru Employee: &quot; + in_TransactionItem(&quot;name&quot;).ToString]" />
    <Sequence DisplayName="Sequence - Incarcare lista tabele Detailed" sap:VirtualizedContainerService.HintSize="1423,604" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[position]" sap:VirtualizedContainerService.HintSize="497,420" sap2010:WorkflowViewState.IdRef="Switch`1_4">
        <ui:InvokeCode ContinueOnError="{x:Null}" x:Key="4" Code="DictionarDetailed_Position.Add(&quot;detaileddev&quot;, 4)&#xA;&#xA;DictionarDetailed_Threshold.Add(&quot;detaileddev&quot;, CInt(Config(&quot;RemoteAssessmentTestMinScoreDEV&quot;).ToString))" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
          <ui:InvokeCode.Arguments>
            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Int32)" x:Key="DictionarDetailed_Position">[dictionarDetailed_Position]</InOutArgument>
            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Int32)" x:Key="DictionarDetailed_Threshold">[dictionarDetailed_Threshold]</InOutArgument>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">[in_Config]</InArgument>
          </ui:InvokeCode.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeCode>
        <ui:InvokeCode ContinueOnError="{x:Null}" x:Key="5" Code="DictionarDetailed_Position.Add(&quot;detailedsa&quot;, 5)&#xA;&#xA;&#xA;&#xA;DictionarDetailed_Threshold.Add(&quot;detailedsa&quot;, CInt(Config(&quot;RemoteAssessmentTestMinScoreSA&quot;).ToString))" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
          <ui:InvokeCode.Arguments>
            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Int32)" x:Key="DictionarDetailed_Position">[dictionarDetailed_Position]</InOutArgument>
            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Int32)" x:Key="DictionarDetailed_Threshold">[dictionarDetailed_Threshold]</InOutArgument>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">[in_Config]</InArgument>
          </ui:InvokeCode.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeCode>
        <ui:InvokeCode ContinueOnError="{x:Null}" x:Key="6" Code="DictionarDetailed_Position.Add(&quot;detailedba&quot;, 6)&#xA;&#xA;DictionarDetailed_Threshold.Add(&quot;detailedba&quot;, CInt(Config(&quot;RemoteAssessmentTestMinScoreBA&quot;).ToString))" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_4">
          <ui:InvokeCode.Arguments>
            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Int32)" x:Key="DictionarDetailed_Position">[dictionarDetailed_Position]</InOutArgument>
            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Int32)" x:Key="DictionarDetailed_Threshold">[dictionarDetailed_Threshold]</InOutArgument>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">[in_Config]</InArgument>
          </ui:InvokeCode.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeCode>
        <ui:InvokeCode ContinueOnError="{x:Null}" x:Key="7" Code="DictionarDetailed_Position.Add(&quot;detailedinfra&quot;, 7)&#xA;&#xA;DictionarDetailed_Threshold.Add(&quot;detailedinfra&quot;, CInt(Config(&quot;RemoteAssessmentTestMinScoreINFRA&quot;).ToString))" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_5">
          <ui:InvokeCode.Arguments>
            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Int32)" x:Key="DictionarDetailed_Position">[dictionarDetailed_Position]</InOutArgument>
            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Int32)" x:Key="DictionarDetailed_Threshold">[dictionarDetailed_Threshold]</InOutArgument>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">[in_Config]</InArgument>
          </ui:InvokeCode.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeCode>
      </Switch>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="497,52" sap2010:WorkflowViewState.IdRef="CommentOut_1">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,256" sap2010:WorkflowViewState.IdRef="Sequence_17">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="DictionarDetailed_Position.Add(&quot;detaileddev&quot;, 4)&#xA;DictionarDetailed_Position.Add(&quot;detailedsa&quot;, 5)&#xA;DictionarDetailed_Position.Add(&quot;detailedba&quot;, 6)&#xA;DictionarDetailed_Position.Add(&quot;detailedinfra&quot;, 7)&#xA;&#xA;DictionarDetailed_Threshold.Add(&quot;detaileddev&quot;, CInt(Config(&quot;RemoteAssessmentTestMinScoreDEV&quot;).ToString))&#xA;DictionarDetailed_Threshold.Add(&quot;detailedsa&quot;, CInt(Config(&quot;RemoteAssessmentTestMinScoreSA&quot;).ToString))&#xA;DictionarDetailed_Threshold.Add(&quot;detailedba&quot;, CInt(Config(&quot;RemoteAssessmentTestMinScoreBA&quot;).ToString))&#xA;DictionarDetailed_Threshold.Add(&quot;detailedinfra&quot;, CInt(Config(&quot;RemoteAssessmentTestMinScoreINFRA&quot;).ToString))" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
              <ui:InvokeCode.Arguments>
                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Int32)" x:Key="DictionarDetailed_Position">[dictionarDetailed_Position]</InOutArgument>
                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Int32)" x:Key="DictionarDetailed_Threshold">[dictionarDetailed_Threshold]</InOutArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">[in_Config]</InArgument>
              </ui:InvokeCode.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeCode>
          </Sequence>
        </ui:CommentOut.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CommentOut>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Preluare lista si validare rezultate." DisplayName="Sequence - Preluare lista angajati" sap:VirtualizedContainerService.HintSize="1423,5047" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dtEmployeeDetails" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1381,2741" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[dictionarDetailed_Position.Keys]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="tabelaDetailed" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="888,2606" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="dtHkEmployeeScore" />
                <Variable x:TypeArguments="x:String" Name="angajati_String" />
                <Variable x:TypeArguments="sd:DataTable" Name="employeeRolesDt" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:Comment sap:VirtualizedContainerService.HintSize="846,56" sap2010:WorkflowViewState.IdRef="Comment_4" Text="// Update below" />
              <Assign sap:VirtualizedContainerService.HintSize="846,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[employeeID]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">205</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtEmployeeDetails]" DisplayName="Execute Query - Selectare inregistrari din Detailed" ExistingDbConnection="[in_Connection]" sap:VirtualizedContainerService.HintSize="846,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="[&quot;select * from &quot;+ tabelaDetailed +&quot; where partneremployee_id  =  &quot; + employeeID]">
                <ui:ExecuteQuery.Parameters>
                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                </ui:ExecuteQuery.Parameters>
              </ui:ExecuteQuery>
              <Assign sap:VirtualizedContainerService.HintSize="846,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[employeeID]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_TransactionItem("PartnerEmployee_ID").ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[dtEmployeeDetails.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="846,2090" sap2010:WorkflowViewState.IdRef="If_3">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="539,1940" sap2010:WorkflowViewState.IdRef="Sequence_19">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="497,320" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch.Try>
                        <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dtHkEmployeeScore]" DisplayName="Execute Query Preluare Scor hackerrank" ExistingDbConnection="[in_Connection]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" Sql="[&quot;select score from hackerank where partneremployee_id = &quot; +employeeID + &quot; and position_ID = &quot; + position]">
                          <ui:ExecuteQuery.Parameters>
                            <scg:Dictionary x:TypeArguments="x:String, Argument" />
                          </ui:ExecuteQuery.Parameters>
                        </ui:ExecuteQuery>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <Sequence sap:VirtualizedContainerService.HintSize="376,247" sap2010:WorkflowViewState.IdRef="Sequence_16">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Error" Message="[&quot;Partner: with the id: &quot; + in_TransactionItem(&quot;id&quot;).ToString + &quot; from Detailed: &quot; + tabelaDetailed + &quot; is not present in the database&quot;]" />
                              <Rethrow sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                            </Sequence>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                    <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="HackerrankScore" DataTable="[dtEmployeeDetails]" DisplayName="Add Data Column - Hackerrank Score" sap:VirtualizedContainerService.HintSize="497,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2" />
                    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[employeeRolesDt]" DisplayName="Execute Query Preluare Adresa de email" ExistingDbConnection="[in_Connection]" sap:VirtualizedContainerService.HintSize="497,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_5" Sql="[&quot;select * from employeeposition where id=&quot; + dictionarDetailed_Position(tabelaDetailed).ToString]">
                      <ui:ExecuteQuery.Parameters>
                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                      </ui:ExecuteQuery.Parameters>
                    </ui:ExecuteQuery>
                    <Assign DisplayName="Assign - populare scor hackerrank" sap:VirtualizedContainerService.HintSize="497,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[dtEmployeeDetails(0)("HackerrankScore")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[dtHkEmployeeScore(0)(0).toString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="PartnerEmployeeEmail" DataTable="[dtEmployeeDetails]" DisplayName="Add Data Column - Partner Employee Email" sap:VirtualizedContainerService.HintSize="497,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_3" />
                    <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="PartnerEmployeeName" DataTable="[dtEmployeeDetails]" DisplayName="Add Data Column - Partner Employee Name" sap:VirtualizedContainerService.HintSize="497,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_4" />
                    <Assign DisplayName="Assign - Populare Adresa Email - angajat" sap:VirtualizedContainerService.HintSize="497,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[dtEmployeeDetails(0)("PartnerEmployeeEmail")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[in_TransactionItem("email").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign - Populare Adresa Email - angajat" sap:VirtualizedContainerService.HintSize="497,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[dtEmployeeDetails(0)("PartnerEmployeeName")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[in_TransactionItem("name").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:OutputDataTable DataTable="[dtEmployeeDetails]" DisplayName="Output Data Table" sap:VirtualizedContainerService.HintSize="497,22" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[angajati_String]" />
                    <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[tabelaDetailed]" sap:VirtualizedContainerService.HintSize="497,812" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence x:Key="detaileddev" sap:VirtualizedContainerService.HintSize="376,512" sap2010:WorkflowViewState.IdRef="Sequence_5">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Boolean" Name="esteDevTestat" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[positionText]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">RPA Developer</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign DetailedDev" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRow">[linie]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRow">[dtEmployeeDetails(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Dev - &quot; + angajati_String]" />
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Status10_RoleValidation workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Workflows\Status\RoleValidation.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Role">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="tabelaDetailed" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Reviewer">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="linie(&quot;uipath_reviewer_email&quot;).ToString" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_RemoteScore">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="linie(&quot;totalScore&quot;).ToString" />
                            </InArgument>
                            <OutArgument x:TypeArguments="x:Boolean" x:Key="out_EsteTestat">
                              <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="isTested" />
                            </OutArgument>
                            <OutArgument x:TypeArguments="x:Boolean" x:Key="out_EsteRemoteAssessmentSuccess">
                              <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="isTestedSuccesfully" />
                            </OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_PassingScore">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;RemoteAssessmentTestMinScoreDEV&quot;).ToString" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:Int32" x:Key="in_EmployeeID">
                              <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="cint(linie(&quot;partneremployee_id&quot;))" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:Int32" x:Key="in_PartnerID">
                              <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="cint(in_TransactionItem(&quot;partner_id&quot;).ToString)" />
                            </InArgument>
                            <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="In_Connection">
                              <mva:VisualBasicValue x:TypeArguments="ui:DatabaseConnection" ExpressionText="in_Connection" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="In_PartnerEmployeeEmail">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;email&quot;).ToString" />
                            </InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                              <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="In_PartnerEmployeeName">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;name&quot;).ToString" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="In_AssessmentType">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="employeeRolesDt(0)(1).toString" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="In_Feedback">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="linie(&quot;feedback&quot;).ToString" />
                            </InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                      <Sequence x:Key="detailedba" sap:VirtualizedContainerService.HintSize="376,512" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign linieBa" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRow">[linie]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRow">[dtEmployeeDetails(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[positionText]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Business Analyst</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Ba - &quot; + angajati_String]" />
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Status10_RoleValidation workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Workflows\Status\RoleValidation.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Role">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="tabelaDetailed" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Reviewer">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="linie(&quot;uipath_reviewer_email&quot;).ToString" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_RemoteScore">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="linie(&quot;totalScore&quot;).ToString" />
                            </InArgument>
                            <OutArgument x:TypeArguments="x:Boolean" x:Key="out_EsteTestat">
                              <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="isTested" />
                            </OutArgument>
                            <OutArgument x:TypeArguments="x:Boolean" x:Key="out_EsteRemoteAssessmentSuccess">
                              <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="isTestedSuccesfully" />
                            </OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_PassingScore">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;RemoteAssessmentTestMinScoreBA&quot;).ToString" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:Int32" x:Key="in_EmployeeID">
                              <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="cint(linie(&quot;partneremployee_id&quot;))" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:Int32" x:Key="in_PartnerID">
                              <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="cint(in_TransactionItem(&quot;partner_id&quot;).ToString)" />
                            </InArgument>
                            <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="In_Connection">
                              <mva:VisualBasicValue x:TypeArguments="ui:DatabaseConnection" ExpressionText="in_Connection" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="In_PartnerEmployeeEmail">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;email&quot;).ToString" />
                            </InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                              <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="In_PartnerEmployeeName">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;name&quot;).ToString" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="In_AssessmentType">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="employeeRolesDt(0)(1).toString" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="In_Feedback">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="linie(&quot;feedback&quot;).ToString" />
                            </InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                      <Sequence x:Key="detailedsa" sap:VirtualizedContainerService.HintSize="376,512" sap2010:WorkflowViewState.IdRef="Sequence_7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign linieSA" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRow">[linie]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRow">[dtEmployeeDetails(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[positionText]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Solution architect</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;SA - &quot; + angajati_String]" />
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Status10_RoleValidation workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Workflows\Status\RoleValidation.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Role">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="tabelaDetailed" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Reviewer">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="linie(&quot;uipath_reviewer_email&quot;).ToString" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_RemoteScore">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="linie(&quot;totalScore&quot;).ToString" />
                            </InArgument>
                            <OutArgument x:TypeArguments="x:Boolean" x:Key="out_EsteTestat">
                              <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="isTested" />
                            </OutArgument>
                            <OutArgument x:TypeArguments="x:Boolean" x:Key="out_EsteRemoteAssessmentSuccess">
                              <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="isTestedSuccesfully" />
                            </OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_PassingScore">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;RemoteAssessmentTestMinScoreSA&quot;).ToString" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:Int32" x:Key="in_EmployeeID">
                              <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="cint(linie(&quot;partneremployee_id&quot;))" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:Int32" x:Key="in_PartnerID">
                              <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="cint(in_TransactionItem(&quot;partner_id&quot;).ToString)" />
                            </InArgument>
                            <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="In_Connection">
                              <mva:VisualBasicValue x:TypeArguments="ui:DatabaseConnection" ExpressionText="in_Connection" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="In_PartnerEmployeeEmail">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;email&quot;).ToString" />
                            </InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                              <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="In_PartnerEmployeeName">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;name&quot;).ToString" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="In_AssessmentType">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="employeeRolesDt(0)(1).toString" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="In_Feedback">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="linie(&quot;feedback&quot;).ToString" />
                            </InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                      <Sequence x:Key="detailedinfra" sap:VirtualizedContainerService.HintSize="376,556" sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign linieInfra" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRow">[linie]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRow">[dtEmployeeDetails(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[positionText]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Infrastructure Engineer</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Infra - &quot; + angajati_String]" />
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Role Validation + Send individual Email in case of success." DisplayName="Invoke Status10_RoleValidation workflow" sap:VirtualizedContainerService.HintSize="334,131" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Workflows\Status\RoleValidation.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Role">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="tabelaDetailed" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Reviewer">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="linie(&quot;uipath_reviewer_email&quot;).ToString" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_RemoteScore">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="linie(&quot;totalScore&quot;).ToString" />
                            </InArgument>
                            <OutArgument x:TypeArguments="x:Boolean" x:Key="out_EsteTestat">
                              <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="isTested" />
                            </OutArgument>
                            <OutArgument x:TypeArguments="x:Boolean" x:Key="out_EsteRemoteAssessmentSuccess">
                              <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="isTestedSuccesfully" />
                            </OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_PassingScore">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;RemoteAssessmentTestMinScoreINFRA&quot;).ToString" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:Int32" x:Key="in_EmployeeID">
                              <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="cint(linie(&quot;partneremployee_id&quot;))" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:Int32" x:Key="in_PartnerID">
                              <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="cint(in_TransactionItem(&quot;partner_id&quot;).ToString)" />
                            </InArgument>
                            <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="In_Connection">
                              <mva:VisualBasicValue x:TypeArguments="ui:DatabaseConnection" ExpressionText="in_Connection" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="In_PartnerEmployeeEmail">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;email&quot;).ToString" />
                            </InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                              <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="In_PartnerEmployeeName">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;name&quot;).ToString" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="In_AssessmentType">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="employeeRolesDt(0)(1).toString" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="In_Feedback">
                              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="linie(&quot;feedback&quot;).ToString" />
                            </InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </Switch>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[isTested]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <ui:Comment sap:VirtualizedContainerService.HintSize="1381,132" sap2010:WorkflowViewState.IdRef="Comment_2" Text="// Calculate Overall Results + Send mail to:&#xA;&#xA;Status 11 - Success - POC/PAM.&#xA;&#xA;Status 14 - Failed - POC/PAM." />
      <If Condition="[isTested]" DisplayName="If All the candidates tested" sap:VirtualizedContainerService.HintSize="1381,1971" sap2010:WorkflowViewState.IdRef="If_1">
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="1002,1821" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="rolesNotPassed">
                <Variable.Default>
                  <Literal x:TypeArguments="x:String" Value="" />
                </Variable.Default>
              </Variable>
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="960,588" sap2010:WorkflowViewState.IdRef="CommentOut_2">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="418,510" sap2010:WorkflowViewState.IdRef="Sequence_18">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Sequence - Calculate Overall Score" sap:VirtualizedContainerService.HintSize="376,418" sap2010:WorkflowViewState.IdRef="Sequence_13">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Start calculating overall Score&quot;]" />
                    <Assign DisplayName="Assign - overall Score" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Double">[overallScore]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Double">[(Double.Parse(linieDev("totalScore").ToString) + Double.Parse(linieBA("totalScore").ToString) + Double.Parse(linieSA("totalScore").ToString) + Double.Parse(linieInfra("totalScore").ToString))/4*60/100 + (Double.Parse(linieDev("HackerrankScore").ToString) + Double.Parse(linieBA("HackerrankScore").ToString) + Double.Parse(linieSA("HackerrankScore").ToString) + Double.Parse(linieInfra("HackerrankScore").ToString))/4*40/100]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;End calculating overall Score&quot;]" />
                  </Sequence>
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <If Condition="[isTestedSuccesfully]" DisplayName="If - All the candidates passed" sap:VirtualizedContainerService.HintSize="960,1101" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="376,499" sap2010:WorkflowViewState.IdRef="Sequence_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;All Roles have been tested, sending email and move to status 11&quot;]" />
                  <ui:SendOutlookMail Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Account="[account]" Body="[String.Format(in_Config(&quot;EmailBodyRA&quot;).ToString,in_TransactionItem(&quot;name&quot;).ToString, linie(&quot;PartnerEmployeeName&quot;).ToString, positionText, ((Double.Parse(linie(&quot;totalScore&quot;).ToString))*0.6+Double.Parse(linie(&quot;HackerrankScore&quot;).ToString)*0.4).ToString)]" DisplayName="Send Outlook Mail Message - Tested Successfully" sap:VirtualizedContainerService.HintSize="334,147" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" IsBodyHtml="True" IsDraft="False" Subject="[&quot;USN Technical Assessment Completed - Passed &quot; + in_TransactionItem(&quot;name&quot;).ToString]" To="[in_TransactionItem(&quot;email&quot;).ToString]">
                    <ui:SendOutlookMail.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                    </ui:SendOutlookMail.Files>
                  </ui:SendOutlookMail>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateEmployeeStatus workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Workflows\UpdateEmployeeStatus.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_Connection">
                        <mva:VisualBasicValue x:TypeArguments="ui:DatabaseConnection" ExpressionText="in_Connection" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Status">
                        <Literal x:TypeArguments="x:String">5</Literal>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_EmployeeId">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;PartnerEmployee_ID&quot;).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Position">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Position_ID&quot;).ToString" />
                      </InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="539,951" sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[in_TransactionItem(&quot;Position_ID&quot;).ToString]" sap:VirtualizedContainerService.HintSize="497,316" sap2010:WorkflowViewState.IdRef="Switch`1_6">
                    <Assign x:Key="4" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[rolesNotPassed]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[String.Format(rolesNotPassed+"{0} - {1} - {2}&lt;br /&gt;", linie("PartnerEmployeeName").ToString, "USN RPA Developer", "Threshold -" + in_Config("RemoteAssessmentTestMinScoreDEV").ToString)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign x:Key="5" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[rolesNotPassed]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[String.Format(rolesNotPassed+"{0} - {1} - {2}&lt;br /&gt;", linie("PartnerEmployeeName").ToString, "USN RPA SA", "Threshold -" + in_Config("RemoteAssessmentTestMinScoreSA").ToString)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign x:Key="6" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[rolesNotPassed]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[String.Format(rolesNotPassed+"{0} - {1} - {2}&lt;br /&gt;", linie("PartnerEmployeeName").ToString, "USN RPA BA", "Threshold -" + in_Config("RemoteAssessmentTestMinScoreBA").ToString)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign x:Key="7" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[rolesNotPassed]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[String.Format(rolesNotPassed+"{0} - {1} - {2}&lt;br /&gt;", linie("PartnerEmployeeName").ToString, "USN RPA Infrastructure Engineer", "Threshold -" + in_Config("RemoteAssessmentTestMinScoreINFRA").ToString)]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Switch>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="497,93" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;not all the roles have been tested successfully, sending email and move to status 14 &quot; + rolesNotPassed]" />
                  <ui:Comment sap:VirtualizedContainerService.HintSize="497,56" sap2010:WorkflowViewState.IdRef="Comment_3" Text="in_TransactionItem(&quot;pemail&quot;).ToString" />
                  <ui:SendOutlookMail Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Account="[account]" Body="[String.Format(in_Config(&quot;EmailBodyFailedRA&quot;).ToString,in_TransactionItem(&quot;name&quot;).ToString, linie(&quot;PartnerEmployeeName&quot;).ToString, position, ((Double.Parse(linie(&quot;totalScore&quot;).ToString))*0.6+Double.Parse(linie(&quot;HackerrankScore&quot;).ToString)*0.4).ToString)]" DisplayName="Send Outlook Mail Message - Tested Successfully" sap:VirtualizedContainerService.HintSize="497,147" sap2010:WorkflowViewState.IdRef="SendOutlookMail_2" IsBodyHtml="True" IsDraft="False" Subject="[&quot;USN Technical Assessment Completed - Not Passed for &quot; + &quot; Name: &quot; + in_TransactionItem(&quot;name&quot;).ToString]" To="ionut.nicula@uipath.com">
                    <ui:SendOutlookMail.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                    </ui:SendOutlookMail.Files>
                  </ui:SendOutlookMail>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateEmployeeStatus workflow" sap:VirtualizedContainerService.HintSize="497,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Workflows\UpdateEmployeeStatus.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_Connection">
                        <mva:VisualBasicValue x:TypeArguments="ui:DatabaseConnection" ExpressionText="in_Connection" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Status">
                        <Literal x:TypeArguments="x:String">6</Literal>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_EmployeeId">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;PartnerEmployee_ID&quot;).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Position">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Position_ID&quot;).ToString" />
                      </InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </If.Then>
        <If.Else>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;there are still roles to be tested&quot;]" />
        </If.Else>
      </If>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1423,93" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Status 10 s-a finalizat pentru Partenerul: &quot; + in_TransactionItem(&quot;name&quot;).ToString]" />
  </Sequence>
</Activity>